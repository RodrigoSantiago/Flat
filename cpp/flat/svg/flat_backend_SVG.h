/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class flat_backend_SVG */

#ifndef _Included_flat_backend_SVG
#define _Included_flat_backend_SVG
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     flat_backend_SVG
 * Method:    Create
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_flat_backend_SVG_Create
  (JNIEnv *, jclass, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    Destroy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_Destroy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     flat_backend_SVG
 * Method:    BeginFrame
 * Signature: (JIIF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_BeginFrame
  (JNIEnv *, jclass, jlong, jint, jint, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    CancelFrame
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_CancelFrame
  (JNIEnv *, jclass, jlong);

/*
 * Class:     flat_backend_SVG
 * Method:    EndFrame
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_EndFrame
  (JNIEnv *, jclass, jlong);

/*
 * Class:     flat_backend_SVG
 * Method:    SetGlobalCompositeOperation
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_SetGlobalCompositeOperation
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    SetGlobalCompositeBlendFunction
 * Signature: (JIIII)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_SetGlobalCompositeBlendFunction
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    StateSave
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_StateSave
  (JNIEnv *, jclass, jlong);

/*
 * Class:     flat_backend_SVG
 * Method:    StateRestore
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_StateRestore
  (JNIEnv *, jclass, jlong);

/*
 * Class:     flat_backend_SVG
 * Method:    StateReset
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_StateReset
  (JNIEnv *, jclass, jlong);

/*
 * Class:     flat_backend_SVG
 * Method:    SetShapeAntiAlias
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_SetShapeAntiAlias
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     flat_backend_SVG
 * Method:    SetPaintColor
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_SetPaintColor
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    SetPaintLinearGradient
 * Signature: (JFFFFI[F[II)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_SetPaintLinearGradient
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jfloat, jint, jfloatArray, jintArray, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    SetPaintRadialGradient
 * Signature: (JFFFFI[F[II)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_SetPaintRadialGradient
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jfloat, jint, jfloatArray, jintArray, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    SetPaintBoxShadow
 * Signature: (JFFFFFFF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_SetPaintBoxShadow
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    SetPaintImage
 * Signature: (JFFFFI)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_SetPaintImage
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jfloat, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    SetMiterLimit
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_SetMiterLimit
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    SetStrokeWidth
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_SetStrokeWidth
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    SetLineCap
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_SetLineCap
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    SetLineJoin
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_SetLineJoin
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    SetGlobalAlpha
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_SetGlobalAlpha
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    TransformIdentity
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_TransformIdentity
  (JNIEnv *, jclass, jlong);

/*
 * Class:     flat_backend_SVG
 * Method:    TransformSet
 * Signature: (JFFFFFF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_TransformSet
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    TransformGet
 * Signature: (J[F)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_TransformGet
  (JNIEnv *, jclass, jlong, jfloatArray);

/*
 * Class:     flat_backend_SVG
 * Method:    TransformTranslate
 * Signature: (JFF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_TransformTranslate
  (JNIEnv *, jclass, jlong, jfloat, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    TransformRotate
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_TransformRotate
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    TransformSkewX
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_TransformSkewX
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    TransformSkewY
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_TransformSkewY
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    TransformScale
 * Signature: (JFF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_TransformScale
  (JNIEnv *, jclass, jlong, jfloat, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    SetScissor
 * Signature: (JFFFF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_SetScissor
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    SetIntersectScissor
 * Signature: (JFFFF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_SetIntersectScissor
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    ResetScissor
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_ResetScissor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     flat_backend_SVG
 * Method:    BeginPath
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_BeginPath
  (JNIEnv *, jclass, jlong);

/*
 * Class:     flat_backend_SVG
 * Method:    MoveTo
 * Signature: (JFF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_MoveTo
  (JNIEnv *, jclass, jlong, jfloat, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    LineTo
 * Signature: (JFF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_LineTo
  (JNIEnv *, jclass, jlong, jfloat, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    BezierTo
 * Signature: (JFFFFFF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_BezierTo
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    QuadTo
 * Signature: (JFFFF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_QuadTo
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    ArcTo
 * Signature: (JFFFFF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_ArcTo
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    ClosePath
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_ClosePath
  (JNIEnv *, jclass, jlong);

/*
 * Class:     flat_backend_SVG
 * Method:    PathWinding
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_PathWinding
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    Arc
 * Signature: (JFFFFFI)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_Arc
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jfloat, jfloat, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    Rect
 * Signature: (JFFFF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_Rect
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    RoundedRect
 * Signature: (JFFFFFFFF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_RoundedRect
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    Ellipse
 * Signature: (JFFFF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_Ellipse
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    Circle
 * Signature: (JFFF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_Circle
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    Fill
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_Fill
  (JNIEnv *, jclass, jlong);

/*
 * Class:     flat_backend_SVG
 * Method:    Stroke
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_Stroke
  (JNIEnv *, jclass, jlong);

/*
 * Class:     flat_backend_SVG
 * Method:    FontCreate
 * Signature: (JLjava/lang/String;[B)I
 */
JNIEXPORT jint JNICALL Java_flat_backend_SVG_FontCreate
  (JNIEnv *, jclass, jlong, jstring, jbyteArray);

/*
 * Class:     flat_backend_SVG
 * Method:    FontFind
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_flat_backend_SVG_FontFind
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     flat_backend_SVG
 * Method:    FontDestroy
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_FontDestroy
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    FontAddFallbackFont
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_flat_backend_SVG_FontAddFallbackFont
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    TextSetFont
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_TextSetFont
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    TextSetSize
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_TextSetSize
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    TextSetBlur
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_TextSetBlur
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    TextSetLetterSpacing
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_TextSetLetterSpacing
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    TextSetLineHeight
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_TextSetLineHeight
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    TextSetAlign
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_TextSetAlign
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    DrawText
 * Signature: (JFFLjava/lang/String;)F
 */
JNIEXPORT jfloat JNICALL Java_flat_backend_SVG_DrawText
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jstring);

/*
 * Class:     flat_backend_SVG
 * Method:    DrawTextBox
 * Signature: (JFFFLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_DrawTextBox
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jstring);

/*
 * Class:     flat_backend_SVG
 * Method:    DrawTextBounds
 * Signature: (JFFLjava/lang/String;[F)F
 */
JNIEXPORT jfloat JNICALL Java_flat_backend_SVG_DrawTextBounds
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jstring, jfloatArray);

/*
 * Class:     flat_backend_SVG
 * Method:    DrawTextBoxBounds
 * Signature: (JFFFLjava/lang/String;[F)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_DrawTextBoxBounds
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jstring, jfloatArray);

/*
 * Class:     flat_backend_SVG
 * Method:    DrawTextBuffer
 * Signature: (JFFLjava/nio/Buffer;II)F
 */
JNIEXPORT jfloat JNICALL Java_flat_backend_SVG_DrawTextBuffer
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jobject, jint, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    DrawTextBoxBuffer
 * Signature: (JFFFLjava/nio/Buffer;II)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_DrawTextBoxBuffer
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jobject, jint, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    DrawTextBoundsBuffer
 * Signature: (JFFLjava/nio/Buffer;II[F)F
 */
JNIEXPORT jfloat JNICALL Java_flat_backend_SVG_DrawTextBoundsBuffer
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jobject, jint, jint, jfloatArray);

/*
 * Class:     flat_backend_SVG
 * Method:    DrawTextBoxBoundsBuffer
 * Signature: (JFFFLjava/nio/Buffer;II[F)V
 */
JNIEXPORT void JNICALL Java_flat_backend_SVG_DrawTextBoxBoundsBuffer
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jfloat, jobject, jint, jint, jfloatArray);

/*
 * Class:     flat_backend_SVG
 * Method:    TextGetWidth
 * Signature: (JLjava/lang/String;)F
 */
JNIEXPORT jfloat JNICALL Java_flat_backend_SVG_TextGetWidth
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     flat_backend_SVG
 * Method:    TextGetWidthBuffer
 * Signature: (JLjava/nio/Buffer;II)F
 */
JNIEXPORT jfloat JNICALL Java_flat_backend_SVG_TextGetWidthBuffer
  (JNIEnv *, jclass, jlong, jobject, jint, jint);

/*
 * Class:     flat_backend_SVG
 * Method:    TextGetLastGlyph
 * Signature: (JLjava/lang/String;F)I
 */
JNIEXPORT jint JNICALL Java_flat_backend_SVG_TextGetLastGlyph
  (JNIEnv *, jclass, jlong, jstring, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    TextGetLastGlyphBuffer
 * Signature: (JLjava/nio/Buffer;IIF)I
 */
JNIEXPORT jint JNICALL Java_flat_backend_SVG_TextGetLastGlyphBuffer
  (JNIEnv *, jclass, jlong, jobject, jint, jint, jfloat);

/*
 * Class:     flat_backend_SVG
 * Method:    TextMetricsGetAscender
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_flat_backend_SVG_TextMetricsGetAscender
  (JNIEnv *, jclass, jlong);

/*
 * Class:     flat_backend_SVG
 * Method:    TextMetricsGetDescender
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_flat_backend_SVG_TextMetricsGetDescender
  (JNIEnv *, jclass, jlong);

/*
 * Class:     flat_backend_SVG
 * Method:    TextMetricsGetLineHeight
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_flat_backend_SVG_TextMetricsGetLineHeight
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
